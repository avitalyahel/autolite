#!/usr/local/bin/python3
'''
autolite control tool.

Usage:
    actl task list [-v | -vv]
    actl task (get | delete) <name> [-v | -vv]
    actl task (add | update) <name> [--schedule=<schedule>] [--state=<state>] [-v | -vv]
    actl reset [-v | -vv]

Arguments:
    <name>      Name of task.

Options:
    -h --help               Show this screen.
    --version               Show version.
    -v --verbose            Higher verbosity messages.
    --schedule <schedule>   Run schedule [default: daily].
    --state <state>         Task state [default: pending].
'''

import os
import sys

import db
from verbosity import set_verbosity

SELF_ABS_PATH = os.path.abspath(__file__)
SELF_SUB_DIR = os.path.basename(os.path.dirname(SELF_ABS_PATH))

PACKAGE_NAME = SELF_SUB_DIR


def actl(arguments):
    db.init()

    if arguments['task']:
        task(arguments)

    elif arguments['reset']:
        if input('Confirm Db reset [N/y]: ') == 'y':
            db.init(drop=True)
            print('Db have been reset!')

        else:
            print('Did not reset.')


def task(arguments):
    if arguments['list']:
        task_list()

    elif arguments['add']:
        db.add_task(**_task_add_update_kwargs(arguments))

    elif arguments['update']:
        db.update_task(**_task_add_update_kwargs(arguments))

    elif arguments['get'] or arguments['delete']:
        try:
            if arguments['get']:
                print(repr(db.get_task(name=arguments['<name>'])))

            else:
                db.delete_task(name=arguments['<name>'])

        except NameError as exc:
            print(PACKAGE_NAME, 'Error:', exc)
            sys.exit(1)


def _task_add_update_kwargs(arguments):
    result = dict(name=arguments['<name>'])
    result.update(dict((arg, arguments['--{}'.format(arg)]) for arg in ['schedule', 'state']))
    return result


def task_list():
    db.g_pragmas.tasks.sep = '\t'
    print(str(db.g_pragmas.tasks).title())
    print(db.list_tasks(colsep='\t'))


if __name__ == '__main__':
    from docopt import docopt
    arguments = docopt(__doc__, version=open('version').read())

    if arguments['--verbose']:
        set_verbosity(arguments['--verbose'])

    if arguments['--verbose'] > 1:
        print(arguments)

    sys.exit(actl(arguments))
